{"numFailedTestSuites":2,"numFailedTests":0,"numPassedTestSuites":4,"numPassedTests":10,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":10,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1729589549985,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Credential content"],"duration":50,"failureDetails":[],"failureMessages":[],"fullName":"Credential content should render credential content component","invocations":1,"location":{"column":3,"line":48},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render credential content component"}],"endTime":1729589564702,"message":"","name":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/__tests__/Credential.test.tsx","startTime":1729589551742,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Json block content"],"duration":54,"failureDetails":[],"failureMessages":[],"fullName":"Json block content should render json block content component","invocations":1,"location":{"column":3,"line":45},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render json block content component"}],"endTime":1729589565521,"message":"","name":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/__tests__/JsonBlock.test.tsx","startTime":1729589551535,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Credential tabs content"],"duration":163,"failureDetails":[],"failureMessages":[],"fullName":"Credential tabs content should render credential tabs component","invocations":1,"location":{"column":3,"line":48},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render credential tabs component"},{"ancestorTitles":["Credential tabs content"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"Credential tabs content should render only json tab","invocations":1,"location":{"column":3,"line":55},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render only json tab"},{"ancestorTitles":["Credential tabs content"],"duration":134,"failureDetails":[],"failureMessages":[],"fullName":"Credential tabs content should display on change value","invocations":1,"location":{"column":3,"line":72},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should display on change value"},{"ancestorTitles":["Credential tabs content"],"duration":61,"failureDetails":[],"failureMessages":[],"fullName":"Credential tabs content should display download button","invocations":1,"location":{"column":3,"line":82},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should display download button"}],"endTime":1729589566480,"message":"","name":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/__tests__/CredentialTabs.test.tsx","startTime":1729589551785,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1729589568136,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/yenle/Documents/source/mock-app-new/tests-untp/node_modules/jose/dist/browser/index.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){export { compactDecrypt } from './jwe/compact/decrypt.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Unexpected token 'export'\n\n    \u001b[0m \u001b[90m  6 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mStatus\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'@mock-app/components'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m  7 |\u001b[39m \u001b[36mimport\u001b[39m { publicAPI\u001b[33m,\u001b[39m privateAPI } \u001b[36mfrom\u001b[39m \u001b[32m'@mock-app/services'\u001b[39m\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33m*\u001b[39m \u001b[36mas\u001b[39m jose \u001b[36mfrom\u001b[39m \u001b[32m'jose'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m  9 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mMessageText\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../components/MessageText'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 10 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mLoadingWithText\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../components/LoadingWithText'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 11 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mBackButton\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../components/BackButton'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22m../../../../../../.nvm/versions/node/v22.0.0/lib/node_modules/jest/node_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22msrc/pages/Verify.tsx\u001b[2m:8:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/pages/index.ts\u001b[2m:4:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/Scanning.test.tsx\u001b[39m\u001b[0m\u001b[2m:8:1)\u001b[22m\n","name":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/__tests__/Scanning.test.tsx","startTime":1729589568136,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1729589568136,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/yenle/Documents/source/mock-app-new/tests-untp/node_modules/jose/dist/browser/index.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){export { compactDecrypt } from './jwe/compact/decrypt.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Unexpected token 'export'\n\n    \u001b[0m \u001b[90m  6 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mStatus\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'@mock-app/components'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m  7 |\u001b[39m \u001b[36mimport\u001b[39m { publicAPI\u001b[33m,\u001b[39m privateAPI } \u001b[36mfrom\u001b[39m \u001b[32m'@mock-app/services'\u001b[39m\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33m*\u001b[39m \u001b[36mas\u001b[39m jose \u001b[36mfrom\u001b[39m \u001b[32m'jose'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m  9 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mMessageText\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../components/MessageText'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 10 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mLoadingWithText\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../components/LoadingWithText'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 11 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mBackButton\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../components/BackButton'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22m../../../../../../.nvm/versions/node/v22.0.0/lib/node_modules/jest/node_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22msrc/pages/Verify.tsx\u001b[2m:8:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/pages/index.ts\u001b[2m:4:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Router/Router.tsx\u001b[2m:4:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Router/index.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/Router.test.tsx\u001b[39m\u001b[0m\u001b[2m:5:1)\u001b[22m\n","name":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/__tests__/Router.test.tsx","startTime":1729589568136,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Credential info content"],"duration":71,"failureDetails":[],"failureMessages":[],"fullName":"Credential info content should render credential info content component","invocations":1,"location":{"column":3,"line":38},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render credential info content component"},{"ancestorTitles":["Credential info content"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Credential info content should show a type different from VerifiableCredential with array type","invocations":1,"location":{"column":3,"line":45},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show a type different from VerifiableCredential with array type"},{"ancestorTitles":["Credential info content"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Credential info content should show a type different from VerifiableCredential with string type","invocations":1,"location":{"column":3,"line":57},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show a type different from VerifiableCredential with string type"},{"ancestorTitles":["Credential info content"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Credential info content should show an issuer with string type","invocations":1,"location":{"column":3,"line":69},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show an issuer with string type"}],"endTime":1729589567406,"message":"","name":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/__tests__/CredentialInfo.test.tsx","startTime":1729589554651,"status":"passed","summary":""}],"wasInterrupted":false,"coverageMap":{"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/CredentialTabs/index.ts":{"path":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/CredentialTabs/index.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":9}},"1":{"start":{"line":1,"column":9},"end":{"line":1,"column":34}}},"fnMap":{"0":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":9},"end":{"line":1,"column":16}},"loc":{"start":{"line":1,"column":9},"end":{"line":1,"column":34}}}},"branchMap":{},"s":{"0":2,"1":7},"f":{"0":5},"b":{}},"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/JsonBlock/index.ts":{"path":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/JsonBlock/index.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":9}},"1":{"start":{"line":1,"column":9},"end":{"line":1,"column":29}}},"fnMap":{"0":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":9},"end":{"line":1,"column":16}},"loc":{"start":{"line":1,"column":9},"end":{"line":1,"column":29}}}},"branchMap":{},"s":{"0":2,"1":11},"f":{"0":9},"b":{}},"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/JsonBlock/JsonBlock.tsx":{"path":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/JsonBlock/JsonBlock.tsx","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":50}},"1":{"start":{"line":5,"column":18},"end":{"line":15,"column":1}},"2":{"start":{"line":6,"column":2},"end":{"line":14,"column":4}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":18},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":75},"end":{"line":15,"column":1}}}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{"0":1},"b":{}},"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/hooks/VerifyPageContext.tsx":{"path":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/hooks/VerifyPageContext.tsx","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":38}},"1":{"start":{"line":3,"column":13},"end":{"line":5,"column":3}}},"fnMap":{},"branchMap":{},"s":{"0":2,"1":2},"f":{},"b":{}},"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/CredentialTabs/CredentialTabs.tsx":{"path":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/CredentialTabs/CredentialTabs.tsx","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":53}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":80}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":82}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":68}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":66}},"6":{"start":{"line":10,"column":23},"end":{"line":122,"column":1}},"7":{"start":{"line":11,"column":25},"end":{"line":20,"column":4}},"8":{"start":{"line":22,"column":48},"end":{"line":22,"column":65}},"9":{"start":{"line":23,"column":16},"end":{"line":23,"column":26}},"10":{"start":{"line":24,"column":19},"end":{"line":24,"column":62}},"11":{"start":{"line":25,"column":17},"end":{"line":25,"column":46}},"12":{"start":{"line":27,"column":2},"end":{"line":29,"column":19}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":24}},"14":{"start":{"line":31,"column":28},"end":{"line":37,"column":3}},"15":{"start":{"line":32,"column":4},"end":{"line":34,"column":null}},"16":{"start":{"line":33,"column":6},"end":{"line":33,"column":35}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":26}},"18":{"start":{"line":39,"column":23},"end":{"line":42,"column":3}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":27}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":33}},"21":{"start":{"line":47,"column":32},"end":{"line":56,"column":3}},"22":{"start":{"line":48,"column":20},"end":{"line":48,"column":47}},"23":{"start":{"line":49,"column":17},"end":{"line":51,"column":6}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":45}},"25":{"start":{"line":53,"column":4},"end":{"line":53,"column":33}},"26":{"start":{"line":54,"column":4},"end":{"line":54,"column":39}},"27":{"start":{"line":55,"column":4},"end":{"line":55,"column":20}},"28":{"start":{"line":58,"column":19},"end":{"line":61,"column":null}},"29":{"start":{"line":59,"column":4},"end":{"line":60,"column":null}},"30":{"start":{"line":64,"column":2},"end":{"line":121,"column":4}},"31":{"start":{"line":91,"column":12},"end":{"line":91,"column":29}},"32":{"start":{"line":116,"column":8},"end":{"line":116,"column":30}},"33":{"start":{"line":124,"column":0},"end":{"line":124,"column":30}}},"fnMap":{"0":{"name":"(anonymous_7)","decl":{"start":{"line":10,"column":23},"end":{"line":10,"column":24}},"loc":{"start":{"line":10,"column":80},"end":{"line":122,"column":1}}},"1":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":12},"end":{"line":27,"column":15}},"loc":{"start":{"line":27,"column":17},"end":{"line":29,"column":3}}},"2":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":28},"end":{"line":31,"column":31}},"loc":{"start":{"line":31,"column":33},"end":{"line":37,"column":3}}},"3":{"name":"(anonymous_10)","decl":{"start":{"line":39,"column":23},"end":{"line":39,"column":24}},"loc":{"start":{"line":39,"column":73},"end":{"line":42,"column":3}}},"4":{"name":"(anonymous_11)","decl":{"start":{"line":47,"column":32},"end":{"line":47,"column":37}},"loc":{"start":{"line":47,"column":43},"end":{"line":56,"column":3}}},"5":{"name":"(anonymous_12)","decl":{"start":{"line":58,"column":19},"end":{"line":58,"column":20}},"loc":{"start":{"line":59,"column":4},"end":{"line":60,"column":null}}},"6":{"name":"(anonymous_13)","decl":{"start":{"line":90,"column":30},"end":{"line":90,"column":31}},"loc":{"start":{"line":91,"column":12},"end":{"line":91,"column":29}}},"7":{"name":"(anonymous_14)","decl":{"start":{"line":115,"column":26},"end":{"line":115,"column":27}},"loc":{"start":{"line":116,"column":8},"end":{"line":116,"column":30}}}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":null}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":null}}]},"1":{"loc":{"start":{"line":60,"column":7},"end":{"line":60,"column":47}},"type":"binary-expr","locations":[{"start":{"line":60,"column":7},"end":{"line":60,"column":22}},{"start":{"line":60,"column":26},"end":{"line":60,"column":47}}]},"2":{"loc":{"start":{"line":72,"column":25},"end":{"line":72,"column":49}},"type":"cond-expr","locations":[{"start":{"line":72,"column":36},"end":{"line":72,"column":41}},{"start":{"line":72,"column":44},"end":{"line":72,"column":49}}]},"3":{"loc":{"start":{"line":73,"column":15},"end":{"line":73,"column":31}},"type":"cond-expr","locations":[{"start":{"line":73,"column":26},"end":{"line":73,"column":27}},{"start":{"line":73,"column":30},"end":{"line":73,"column":31}}]},"4":{"loc":{"start":{"line":88,"column":25},"end":{"line":88,"column":50}},"type":"cond-expr","locations":[{"start":{"line":88,"column":36},"end":{"line":88,"column":42}},{"start":{"line":88,"column":45},"end":{"line":88,"column":50}}]},"5":{"loc":{"start":{"line":110,"column":11},"end":{"line":110,"column":37}},"type":"cond-expr","locations":[{"start":{"line":110,"column":22},"end":{"line":110,"column":24}},{"start":{"line":110,"column":27},"end":{"line":110,"column":37}}]}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":8,"8":8,"9":8,"10":8,"11":8,"12":8,"13":4,"14":8,"15":4,"16":1,"17":3,"18":8,"19":1,"20":1,"21":8,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":8,"29":16,"30":8,"31":16,"32":16,"33":1},"f":{"0":8,"1":4,"2":4,"3":1,"4":1,"5":16,"6":16,"7":16},"b":{"0":[1],"1":[16,8],"2":[0,8],"3":[0,8],"4":[0,8],"5":[0,8]}},"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/CredentialInfo/CredentialInfo.tsx":{"path":"/Users/yenle/Documents/source/mock-app-new/tests-untp/packages/mock-app/src/components/CredentialInfo/CredentialInfo.tsx","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":61}},"3":{"start":{"line":6,"column":23},"end":{"line":42,"column":1}},"4":{"start":{"line":7,"column":25},"end":{"line":19,"column":23}},"5":{"start":{"line":8,"column":4},"end":{"line":10,"column":null}},"6":{"start":{"line":9,"column":6},"end":{"line":9,"column":29}},"7":{"start":{"line":12,"column":18},"end":{"line":12,"column":46}},"8":{"start":{"line":13,"column":17},"end":{"line":13,"column":71}},"9":{"start":{"line":13,"column":39},"end":{"line":13,"column":70}},"10":{"start":{"line":14,"column":4},"end":{"line":16,"column":null}},"11":{"start":{"line":15,"column":6},"end":{"line":15,"column":18}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":34}},"13":{"start":{"line":22,"column":4},"end":{"line":25,"column":null}},"14":{"start":{"line":24,"column":6},"end":{"line":24,"column":23}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"16":{"start":{"line":29,"column":2},"end":{"line":41,"column":4}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":30}}},"fnMap":{"0":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":23},"end":{"line":6,"column":24}},"loc":{"start":{"line":6,"column":80},"end":{"line":42,"column":1}}},"1":{"name":"(anonymous_2)","decl":{"start":{"line":7,"column":33},"end":{"line":7,"column":36}},"loc":{"start":{"line":7,"column":38},"end":{"line":19,"column":3}}},"2":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":29},"end":{"line":13,"column":30}},"loc":{"start":{"line":13,"column":39},"end":{"line":13,"column":70}}},"3":{"name":"processIssuer","decl":{"start":{"line":21,"column":11},"end":{"line":21,"column":24}},"loc":{"start":{"line":21,"column":43},"end":{"line":27,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":null}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":null}}]},"1":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":null}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":null}}]},"2":{"loc":{"start":{"line":22,"column":4},"end":{"line":25,"column":null}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":25,"column":null}}]},"3":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":52}},"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":34}},{"start":{"line":22,"column":38},"end":{"line":22,"column":52}}]}},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":4,"6":1,"7":3,"8":3,"9":4,"10":3,"11":1,"12":2,"13":4,"14":3,"15":1,"16":4,"17":1},"f":{"0":4,"1":4,"2":4,"3":4},"b":{"0":[1],"1":[1],"2":[3],"3":[4,3]}}}}
