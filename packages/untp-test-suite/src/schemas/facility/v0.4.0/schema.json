{
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "type": {
      "type": "array",
      "readOnly": true,
      "const": ["Facility"],
      "default": ["Facility"],
      "items": {
        "type": "string",
        "enum": ["Facility"]
      }
    },
    "id": {
      "example": "https://id.gs1.org/gln/0614141123452",
      "type": "string",
      "format": "uri",
      "description": "The globally unique ID of the facility as URI, ideally as a resolvable URL."
    },
    "registeredId": {
      "example": "0614141123452",
      "type": "string",
      "description": "The registration number (alphanumeric) of the facility within the identifir scheme. Unique within the register."
    },
    "description": {
      "example": "LiFePO4 Battery plant number 7",
      "type": "string",
      "description": "An optional short description of the facility"
    },
    "name": {
      "example": "Example facility 7",
      "type": "string",
      "description": "The registered name of the facility within the identifier scheme.  "
    },
    "idScheme": {
      "$ref": "#/$defs/IdentifierScheme",
      "description": "The ID scheme of the facility. eg a GS1 GLN or a National land registry scheme. If self issued then use the prty ID of the facility owner. "
    },
    "countryOfOperation": {
      "type": "string",
      "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
      "description": "The country in which this facility is operating.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
    },
    "processCategories": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Classification"
      },
      "description": "The idustrial or production processes performed by this facility.    id:unstats.un.org/isic/1030  code:1030  name:Processing and preserving of fruit and vegetables  schemeID:unstats.un.org/unsd/classifications/Econ/isic  schemeName:ISIC"
    },
    "operatedByParty": {
      "$ref": "#/$defs/Identifier",
      "description": "The Party entity responsible for operating the facility.An object structure that uniquely identifies the party within a known party identifiaction scheme. "
    },
    "otherIdentifiers": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Identifier"
      },
      "description": "An optional list of other registered identifiers for this facility - eg GLNs or other schemes."
    },
    "address": {
      "$ref": "#/$defs/Address",
      "description": "The Postal address of the location."
    },
    "locationInformation": {
      "$ref": "#/$defs/Location",
      "description": "Physical location details"
    },
    "conformityClaims": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Claim"
      },
      "description": "A list of conformity declarations agains specific criterai from recognised standards or regulations. "
    }
  },
  "description": "A facility sustainabiloty performacne record.",
  "required": ["id", "name"],
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$defs": {
    "IdentifierScheme": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["IdentifierScheme"],
          "default": ["IdentifierScheme"],
          "items": {
            "type": "string",
            "enum": ["IdentifierScheme"]
          }
        },
        "id": {
          "example": "https://id.gs1.org/01/",
          "type": "string",
          "format": "uri",
          "description": "The globally unique identifier of the registration scheme. The scheme should be registered and discoverable from vocabulary.uncefact.org/identifierSchemes"
        },
        "name": {
          "example": "Global Trade Identification Number (GTIN)",
          "type": "string",
          "description": "The name of the identifier scheme. "
        }
      },
      "description": "An identifier registration scheme for products, facilities, or organisations. Typically operated by a state, national or gloabl authority."
    },
    "Classification": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Classification"],
          "default": ["Classification"],
          "items": {
            "type": "string",
            "enum": ["Classification"]
          }
        },
        "id": {
          "example": "https://unstats.un.org/unsd/classifications/Econ/cpc/46410",
          "type": "string",
          "format": "uri",
          "description": "The globally unique URI representing the specific classifier value"
        },
        "code": {
          "example": "46410",
          "type": "string",
          "description": "classification code within the scheme"
        },
        "name": {
          "example": "Primary cells and primary batteries",
          "type": "string",
          "description": "Name of the classification represented by the code"
        },
        "schemeID": {
          "example": "https://unstats.un.org/unsd/classifications/Econ/cpc/",
          "type": "string",
          "format": "uri",
          "description": "Classification scheme ID"
        },
        "schemeName": {
          "example": "UN Central Product Classification (CPC)",
          "type": "string",
          "description": "The name of the classification scheme"
        }
      },
      "description": "A classification scheme and code / name representing a category value for a product, entity, or facility.",
      "required": ["id", "name"]
    },
    "Identifier": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Identifier"],
          "default": ["Identifier"],
          "items": {
            "type": "string",
            "enum": ["Identifier"]
          }
        },
        "id": {
          "example": "https://id.gs1.org/01/09520123456788/21/12345",
          "type": "string",
          "format": "uri",
          "description": "The globally unique ID of the entity as a resolvable URL according to ISO 18975. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.example-company.com:123. "
        },
        "name": {
          "example": "EV battery 300Ah.",
          "type": "string",
          "description": "The registered name of the entity within the identifier scheme.  Examplesproduct - EV battery 300Ahparty - Sample Company Pty Ltd. facility - Greenacres battery factory"
        },
        "registeredId": {
          "example": "90664869327",
          "type": "string",
          "description": "The registration number (alphanumeric) of the entity within the register. Unique within the register."
        },
        "idScheme": {
          "$ref": "#/$defs/IdentifierScheme",
          "description": "The identifier scheme.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com. "
        }
      },
      "description": "The ID and Name of an identified entity such qs a product, facility, party, standard, etc.  If the identifier is a W3C DID then the corresponding DID document SHOULD include a serviceEndpoint of type \"IdentityResolver\". If the identifier is not a W3C DID then the id peroperty SHOULD be an identity resolver URL.",
      "required": ["id", "name"]
    },
    "Address": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Address"],
          "default": ["Address"],
          "items": {
            "type": "string",
            "enum": ["Address"]
          }
        },
        "streetAddress": {
          "example": "level 11, 15 London Circuit",
          "type": "string",
          "description": "the street address - eg "
        },
        "postalCode": {
          "example": "2601",
          "type": "string",
          "description": "The post code"
        },
        "addressLocality": {
          "example": "Acton",
          "type": "string",
          "description": "The city, suburb or township."
        },
        "addressRegion": {
          "example": "ACT",
          "type": "string",
          "description": "The state or territory or province"
        },
        "addressCountry": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
          "description": "The address country\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
        }
      },
      "description": "A postal address"
    },
    "Location": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Location"],
          "default": ["Location"],
          "items": {
            "type": "string",
            "enum": ["Location"]
          }
        },
        "plusCode": {
          "example": "https://plus.codes/8CGRC78W+MM",
          "type": "string",
          "format": "uri",
          "description": "An open location code (https://maps.google.com/pluscodes/) representing this geographic location or region. Open location codes can represent any sized area from a point to a large region and are easily resolved to a visual map location. "
        },
        "geoLocation": {
          "$ref": "#/$defs/Point",
          "description": "The latitude and logditude coordinates that best represent the specified location. Using GeoJSON Point notation."
        },
        "geoBoundary": {
          "$ref": "#/$defs/Polygon",
          "description": "The list of ordered coordinates that define a closed area polygon as a location boundary using GeoJSON polygon notation."
        }
      },
      "description": "Location information including address and geolocation of points, areas, and boundaries"
    },
    "Point": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Point"],
          "example": "Point",
          "description": ""
        },
        "coordinates": {
          "$ref": "#/$defs/Point3D",
          "description": "Coordinates property of type Point3D"
        }
      },
      "description": "Represents a Point geometry",
      "required": ["type"]
    },
    "Point3D": {
      "description": "Point in 3d space",
      "oneOf": [
        {
          "type": "array",
          "readOnly": true,
          "const": ["Point3D"],
          "default": ["Point3D"],
          "items": {
            "type": "string",
            "enum": ["Point3D"]
          }
        },
        {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "Array of decimal values"
        }
      ]
    },
    "Polygon": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Polygon"],
          "example": "Polygon",
          "description": ""
        },
        "coordinates": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Point3DWrapper"
          },
          "description": "Array of PolygonCoordinates"
        }
      },
      "description": "Represents a Polygon geometry",
      "required": ["type"]
    },
    "Point3DWrapper": {
      "description": "",
      "oneOf": [
        {
          "type": "array",
          "readOnly": true,
          "const": ["Point3DWrapper"],
          "default": ["Point3DWrapper"],
          "items": {
            "type": "string",
            "enum": ["Point3DWrapper"]
          }
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Point3D"
          },
          "description": ""
        }
      ]
    },
    "Claim": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Claim", "Declaration"],
          "default": ["Claim", "Declaration"],
          "items": {
            "type": "string",
            "enum": ["Claim", "Declaration"]
          }
        },
        "assessmentDate": {
          "example": "2024-03-15",
          "type": "string",
          "format": "date",
          "description": "The date on which this assessment was made. "
        },
        "id": {
          "example": "https://products.example-company.com/09520123456788/declarations/12345",
          "type": "string",
          "format": "uri",
          "description": "A unique identifier for the delcaration. Often this will be an extension of the product.id or attestation.id. But could be a UUID."
        },
        "referenceStandard": {
          "$ref": "#/$defs/Standard",
          "description": "The reference to the standard that defines the specification / criteria"
        },
        "referenceRegulation": {
          "$ref": "#/$defs/Regulation",
          "description": "The reference to the regulation that defines the assessment criteria"
        },
        "assessmentCriteria": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Criterion"
          },
          "description": "The specification against which the assessment is made."
        },
        "declaredValues": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Metric"
          },
          "description": "The list of specific values measured as part of this assessment (eg tensile strength)"
        },
        "compliance": {
          "example": "true",
          "type": "boolean",
          "description": "An indicator of whether or not the assessment meets the specification."
        },
        "conformityTopic": {
          "type": "string",
          "enum": [
            "environment.energy",
            "environment.emissions",
            "environment.water",
            "environment.waste",
            "environment.deforestation",
            "environment.biodiversity",
            "circularity.content",
            "circularity.design",
            "social.labour",
            "social.rights",
            "social.community",
            "social.safety",
            "governance.ethics",
            "governance.compliance",
            "governance.transparency"
          ],
          "example": "environment.energy",
          "description": "The conformity topic category for this assessment (eg vocabulary.uncefact.org/sustainability/emissions)"
        },
        "conformityEvidence": {
          "$ref": "#/$defs/SecureLink",
          "description": "A binary file that is hashed ()for tamper evidence) and optionally encrypted (for confidentiality)."
        }
      },
      "description": "A confomrity claim aboutthe facility against a specific standard or regulation.",
      "required": ["id", "compliance", "conformityTopic"]
    },
    "Standard": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Standard"],
          "default": ["Standard"],
          "items": {
            "type": "string",
            "enum": ["Standard"]
          }
        },
        "id": {
          "example": "https://www.globalbattery.org/media/publications/gba-rulebook-v2.0-master.pdf",
          "type": "string",
          "format": "uri",
          "description": "A unique identifier for the standard (eg https://www.iso.org/standard/60857.html)."
        },
        "name": {
          "example": "GBA Battery Passport Greenhouse Gas Rulebook - V.2.0",
          "type": "string",
          "description": "The name of the standard"
        },
        "issuingParty": {
          "$ref": "#/$defs/Identifier",
          "description": "The party that issued the standard "
        },
        "issueDate": {
          "example": "2023-12-05",
          "type": "string",
          "format": "date",
          "description": "The date when the standard was issued."
        }
      },
      "description": "A standard (eg ISO 14000) that specifies the criteria for conformance.",
      "required": ["issuingParty"]
    },
    "Regulation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Regulation"],
          "default": ["Regulation"],
          "items": {
            "type": "string",
            "enum": ["Regulation"]
          }
        },
        "id": {
          "example": "https://www.legislation.gov.au/F2008L02309/latest/versions",
          "type": "string",
          "format": "uri",
          "description": "The globally unique identifier of this regulation. "
        },
        "name": {
          "example": "NNational Greenhouse and Energy Reporting (Measurement) Determination",
          "type": "string",
          "description": "The name of the regulation or act."
        },
        "jurisdictionCountry": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
          "description": "The legal jurisdiction (country) under which the regulation is issued.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
        },
        "administeredBy": {
          "$ref": "#/$defs/Identifier",
          "description": "the issuing body of the regulation. For example Australin Goernment Department of Climate Change, Energy, the Environment and Water"
        },
        "effectiveDate": {
          "example": "2024-03-20",
          "type": "string",
          "format": "date",
          "description": "the date at which the regulation came into effect."
        }
      },
      "description": "A regulation (eg EU deforestation regulation) that defines the criteria for assessment.",
      "required": ["administeredBy"]
    },
    "Criterion": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Criterion"],
          "default": ["Criterion"],
          "items": {
            "type": "string",
            "enum": ["Criterion"]
          }
        },
        "id": {
          "example": "https://www.globalbattery.org/media/publications/gba-rulebook-v2.0-master.pdf#BatteryAssembly",
          "type": "string",
          "format": "uri",
          "description": "A unique identifier for the criteria within the standard  or regulation. For example CO2 emissions calaculations for liquid fule combusion."
        },
        "name": {
          "example": "GBA Battery rule book v2.0 battery assembly guidelines.",
          "type": "string",
          "description": "A name that describes this criteria."
        },
        "thresholdValues": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Metric"
          },
          "description": "A conformity threshold defined by the specification (eg minimum compressive strength) "
        }
      },
      "description": "A specific rule or criterion within a standard or regulation. eg a carbon intensity calculation rule within an emissions standard.",
      "required": ["id", "name"]
    },
    "Metric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Metric"],
          "default": ["Metric"],
          "items": {
            "type": "string",
            "enum": ["Metric"]
          }
        },
        "metricName": {
          "example": "GHG emissions intensity",
          "type": "string",
          "description": "A human readable name for this metric (for example \"Tensile strength\")"
        },
        "metricValue": {
          "$ref": "#/$defs/Measure",
          "description": "A numeric value and unit of measure for this metric. Could be a measured value or a specified threshold. Eg {\"value\":400, \"unit\":\"MPA\"} as tensile strenght of structural steel"
        },
        "score": {
          "example": "BB",
          "type": "string",
          "description": "A score or rank associated with this measured metric."
        },
        "accuracy": {
          "example": 0.05,
          "type": "number",
          "description": "A percentage represented as a numeric between 0 and 1 indicating the rage of accuracy of the claimed value (eg 0.05 means that the actual value is within 5% of the claimed value.)"
        }
      },
      "description": "A specific measure of performance against the criteria that governs the claim.  Expressed as an array of metric (ie unit of emasure) / value (ie the actual numeric value) pairs.  ",
      "required": ["metricName", "metricValue"]
    },
    "Measure": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Measure"],
          "default": ["Measure"],
          "items": {
            "type": "string",
            "enum": ["Measure"]
          }
        },
        "value": {
          "example": 10,
          "type": "number",
          "description": "The numeric value of the measure"
        },
        "unit": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
          "description": "Unit of measure drawn from the UNECE rec20 measure code list.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
        }
      },
      "description": "The measure class defines a numeric measured value (eg 10) and a coded unit of measure (eg KG).",
      "required": ["value", "unit"]
    },
    "SecureLink": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["SecureLink", "Link"],
          "default": ["SecureLink", "Link"],
          "items": {
            "type": "string",
            "enum": ["SecureLink", "Link"]
          }
        },
        "linkURL": {
          "example": "https://files.example-certifier.com/1234567.json",
          "type": "string",
          "format": "uri",
          "description": "The URL of the target resource. "
        },
        "linkName": {
          "example": "GBA rule book conformity certificate",
          "type": "string",
          "description": "A display name for the target resource "
        },
        "linkType": {
          "example": "https://test.uncefact.org/vocabulary/linkTypes/dcc",
          "type": "string",
          "description": "The type of the target resource - drawn from a controlled vocabulary "
        },
        "hashDigest": {
          "example": "6239119dda5bd4c8a6ffb832fe16feaa5c27b7dba154d24c53d4470a2c69adc2",
          "type": "string",
          "description": "The hash of the file."
        },
        "hashMethod": {
          "type": "string",
          "enum": ["SHA-256", "SHA-1"],
          "example": "SHA-256",
          "description": "The hashing algorithm used to create the target hash.  SHA-265 is the recommedned standard"
        },
        "encryptionMethod": {
          "type": "string",
          "enum": ["none", "AES"],
          "example": "none",
          "description": "The symmetric encryption algorithm used to encrypt the link target.  AES is the recommended standard. Decryption keys are expected to be passed out of bounds."
        }
      },
      "description": "A binary file that is hashed ()for tamper evidence) and optionally encrypted (for confidentiality)."
    }
  }
}
