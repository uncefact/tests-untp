{
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "type": {
      "type": "array",
      "readOnly": true,
      "const": ["TransformationEvent", "Event"],
      "default": ["TransformationEvent", "Event"],
      "items": {
        "type": "string",
        "enum": ["TransformationEvent", "Event"]
      }
    },
    "id": {
      "readOnly": true,
      "type": "string",
      "format": "uri",
      "description": "The unique identifier of this event - SHOULD be a UUID"
    },
    "eventTime": {
      "type": "string",
      "format": "date-time",
      "description": "The ISO-8601 date time when the event occurred."
    },
    "action": {
      "type": "string",
      "enum": ["observe", "add", "delete"],
      "example": "observe",
      "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
    },
    "disposition": {
      "type": "string",
      "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
      "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
    },
    "bizStep": {
      "type": "string",
      "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
      "description": "A business step code drawn from a controlled vocabulary. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
    },
    "bizLocation": {
      "type": "string",
      "format": "uri",
      "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
    },
    "sensorElementList": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/SensorElement"
      },
      "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
    },
    "outputEPCList": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Item"
      },
      "description": "The list of uniquely identified items that are the output of this transformation event - for example a list of individually identified bolts of cloth that are the output of a weaving process."
    },
    "inputEPCList": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Item"
      },
      "description": "The list of uniquely identified items that are the input of this transformation event - for example a list of individually identified bobbins of yarn that are the input of a weaving process."
    },
    "inputQuantityList": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/QuantityElement"
      },
      "description": "The quantified list of product classes that are the input of this transformation event - used when each item does not have a unique identity.  for example the weight of raw cotton that is the input to a ginning process."
    },
    "outputQuantityList": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/QuantityElement"
      },
      "description": "The quantified list of product classes that are the output of this transformation event - used when each item does not have a unique identity.  for example a count of the bales of cleaned cotton that are the output of a ginning process."
    },
    "processType": {
      "type": "string",
      "format": "uri",
      "description": "An industry specific process type code.  "
    }
  },
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Transformation represents an event in which input objects are fully or partially consumed and output objects are produced, such that any of the input objects may have contributed to all of the output objects - for example consuming bales of cotton to produce yarn.",
  "$defs": {
    "SensorElement": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "sensorMetadata": {
          "$ref": "#/$defs/Sensor",
          "description": "Data that describes the physical sensor that recorded the sensor data set."
        },
        "sensorReport": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SensorData"
          },
          "description": "A list of sensor readings from the given sensor relevant to the traceability event context."
        }
      },
      "description": "A SensorElement carries data related to an event that is captured by one sensor (e.g., an IoT device)."
    },
    "Sensor": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "device": {
          "$ref": "#/$defs/Item",
          "description": "The device Identifier for the sensor as a URI (typically an EPC)."
        },
        "dataProcessingMethod": {
          "type": "string",
          "format": "uri",
          "description": "The data processing method used by the sensor, referencing a documented standard as a URI."
        }
      },
      "description": "A physical sensor that records a sensor data set."
    },
    "Item": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "const": ["Item", "Entity"],
          "default": ["Item", "Entity"],
          "items": {
            "type": "string",
            "enum": ["Item", "Entity"]
          }
        },
        "id": {
          "type": "string",
          "format": "uri",
          "example": "https://id.gs1.org/01/09520123456788/21/12345",
          "description": "The globally unique ID of the entity as a resolvable URL."
        },
        "name": {
          "type": "string",
          "example": "EV battery 300Ah.",
          "description": "The registered name of the entity within the identifier scheme."
        }
      },
      "required": ["id", "name"]
    },
    "SensorData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "the timestamp at which the sensor reading was made."
        },
        "sensorType": {
          "type": "string",
          "format": "uri",
          "description": "the measurement type of the sensor reading, as a URI reference to a measurement method specification."
        },
        "value": {
          "type": "number",
          "description": "the sensor reading"
        },
        "uom": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
          "description": "the unit of measure for the sensor reading\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
        }
      },
      "description": "A data point read by a sensor."
    },
    "QuantityElement": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "product": {
          "$ref": "#/$defs/Item",
          "description": "The identifier of a product class, such as a GTIN code."
        },
        "quantity": {
          "type": "number",
          "description": "The numeric quantity of the product class (e.g., 100 kg of cotton)."
        },
        "uom": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
          "description": "The unit of measure for the quantity value, such as kg or meters."
        }
      },
      "required": ["quantity"]
    }
  }
}
