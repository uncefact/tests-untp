name: Build and Test

on:
  pull_request:
    branches:
      - next

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn cache clean && yarn install --immutable

      - name: Check linting
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Run tests
        run: |
          yarn test:coverage

      - name: Jest Coverage Comment
        uses: MishaKav/jest-coverage-comment@main
        with:
          title: Code Coverage Report
          multiple-files: |
            All packages, ./coverage/coverage-summary.json
            Components, ./packages/components/coverage/coverage-summary.json
            Mock app, ./packages/mock-app/coverage/coverage-summary.json
            Services, ./packages/services/coverage/coverage-summary.json
            UNTP test suite, ./packages/untp-test-suite/coverage/coverage-summary.json
            VC test suite, ./packages/vc-test-suite/coverage/coverage-summary.json
            UNTP Playground, ./packages/untp-playground/coverage/coverage-summary.json

      - name: Start E2E docker compose
        run: SEEDING=true docker compose -f docker-compose.e2e.yml up -d

      - name: Wait for IDR service to be ready. Max 10 attempts (Total 60 seconds)
        run: |
          attempt_counter=0
          max_attempts=10
          
          until $(curl --output /dev/null --silent --fail http://localhost:3000/health-check); do
            if [ ${attempt_counter} -eq ${max_attempts} ];then
              echo "Max attempts reached. Service failed to start"
              exit 1
            fi
            
            printf '.'
            attempt_counter=$(($attempt_counter+1))
            sleep 6
          done

      - name: Check health endpoint
        run: |
          response=$(curl -s http://localhost:3000/health-check)
          status=$(echo $response | jq -r '.status')
          
          if [ "$status" != "OK" ]; then
            echo "Health check failed. Expected status 'OK' but got '${status}'"
            exit 1
          fi
          echo "Health check passed successfully"

      - name: Run E2E tests
        run: yarn test:run-cypress

      - name: Stop docker compose
        run: docker compose -f docker-compose.e2e.yml down

  build_docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: yarn

      - name: Install and build documentation
        run: |
          cd documentation
          yarn install --frozen-lockfile
          yarn build
        env:
          DOCS_BASE_URL: ${{ vars.DOCS_BASE_URL }}
          DOCS_URL: ${{ vars.DOCS_URL }}
