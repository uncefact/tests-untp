"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3873],{8481:(e,t,i)=>{i.d(t,{Ay:()=>o,RM:()=>r});var n=i(4848),s=i(8453);const r=[];function c(e){const t={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function o(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},949:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>d,toc:()=>a});var n=i(4848),s=i(8453),r=i(8481);const c={sidebar_position:39,title:"Default Verification Service Link"},o=void 0,d={id:"mock-apps/common/default-verification-service-link",title:"Default Verification Service Link",description:"Description",source:"@site/docs/mock-apps/common/default-verification-service-link.md",sourceDirName:"mock-apps/common",slug:"/mock-apps/common/default-verification-service-link",permalink:"/tests-untp/docs/mock-apps/common/default-verification-service-link",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/mock-apps/common/default-verification-service-link.md",tags:[],version:"current",sidebarPosition:39,frontMatter:{sidebar_position:39,title:"Default Verification Service Link"},sidebar:"tutorialSidebar",previous:{title:"Verify Link",permalink:"/tests-untp/docs/mock-apps/common/verify-link"},next:{title:"Scanning App",permalink:"/tests-untp/docs/mock-apps/scanning-app"}},l={},a=[...r.RM,{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"Definitions",id:"definitions",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.Ay,{}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"DefaultVerificationServiceLink"})," object defines the default link and parameters of the verification service used when verifying credentials within the ",(0,n.jsx)(t.a,{href:"/docs/mock-apps/verify-app",children:"verify page"})," of the Mock App system."]}),"\n",(0,n.jsx)(t.p,{children:"The typical flow is as follows:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["A user runs through the ",(0,n.jsx)(t.a,{href:"/docs/mock-apps/scanning-app",children:"scanning app"})," flow."]}),"\n",(0,n.jsxs)(t.li,{children:["The resulting credential is passed to the ",(0,n.jsx)(t.a,{href:"/docs/mock-apps/verify-app",children:"verify page"})," of the Mock App system."]}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.a,{href:"/docs/mock-apps/verify-app",children:"verify page"})," uses the verification service defined in the ",(0,n.jsx)(t.code,{children:"Default Verification Service Link"})," object to verify the credential."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"This object ensures that the Mock App system has a consistent and predefined method for credential verification."}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "defaultVerificationServiceLink": {\n    "title": "Default Verification Service",\n    "context": "Default Verification Service",\n    "type": "application/json",\n    "href": "http://localhost:3332/agent/routeVerificationCredential",\n    "hreflang": ["en"],\n    "apiKey": "test123"\n  }\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"definitions",children:"Definitions"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{style:{textAlign:"center"},children:"Required"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Type"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"title"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,n.jsx)(t.td,{children:"The title of the verification service."}),(0,n.jsx)(t.td,{children:"String"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"context"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,n.jsx)(t.td,{children:"The context or description of the verification service."}),(0,n.jsx)(t.td,{children:"String"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"href"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,n.jsx)(t.td,{children:"The URL of the verification service endpoint."}),(0,n.jsx)(t.td,{children:"String"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"hreflang"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,n.jsx)(t.td,{children:"An array of language codes that the service supports."}),(0,n.jsx)(t.td,{children:"String[]"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"apiKey"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,n.jsx)(t.td,{children:"The API key required to access the verification service."}),(0,n.jsx)(t.td,{children:"String"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"type"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,n.jsx)(t.td,{children:'The MIME type of the expected response, e.g., "application/json".'}),(0,n.jsx)(t.td,{children:"String"})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>o});var n=i(6540);const s={},r=n.createContext(s);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);