"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8228],{8481:(t,e,n)=>{n.d(e,{Ay:()=>a,RM:()=>o});var i=n(4848),s=n(8453);const o=[];function r(t){const e={admonition:"admonition",p:"p",...(0,s.R)(),...t.components};return(0,i.jsx)(e.admonition,{type:"info",children:(0,i.jsx)(e.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function a(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(r,{...t})}):r(t)}},964:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=n(4848),s=n(8453),o=n(8481);const r={sidebar_position:2,title:"Getting Started"},a=void 0,c={id:"test-suites/semantic-interoperability/getting-started",title:"Getting Started",description:"The Getting Started section covers the following topics for each:",source:"@site/docs/test-suites/semantic-interoperability/getting-started.md",sourceDirName:"test-suites/semantic-interoperability",slug:"/test-suites/semantic-interoperability/getting-started",permalink:"/tests-untp/docs/test-suites/semantic-interoperability/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/test-suites/semantic-interoperability/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Getting Started"},sidebar:"tutorialSidebar",previous:{title:"Semantic Interoperability",permalink:"/tests-untp/docs/test-suites/semantic-interoperability/"},next:{title:"CLI",permalink:"/tests-untp/docs/test-suites/semantic-interoperability/cli/"}},l={},d=[...o.RM];function u(t){const e={a:"a",li:"li",ol:"ol",p:"p",strong:"strong",...(0,s.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.Ay,{}),"\n",(0,i.jsx)(e.p,{children:"The Getting Started section covers the following topics for each:"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/test-suites/semantic-interoperability/cli/installation",children:(0,i.jsx)(e.strong,{children:"Installation"})}),": Learn how to install the necessary dependencies and set up the Tier 2 test suite on your system."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/test-suites/semantic-interoperability/cli/configuration",children:(0,i.jsx)(e.strong,{children:"Configuration"})}),": Understand how to configure the test suite. We'll cover the structure of the configuration file, how to specify credential types and versions, and how to reference your test credential files."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/test-suites/semantic-interoperability/cli/usage",children:(0,i.jsx)(e.strong,{children:"Usage"})}),": Learn how to run the test suite, interpret the results. This section will guide you through validating your UNTP credentials against the core data model."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/test-suites/semantic-interoperability/cli/extensions",children:(0,i.jsx)(e.strong,{children:"Extending the Test Suite"})}),": Discover how to extend the test suite to accommodate custom credential types or additional properties. This section will be particularly useful if you're prototyping extensions to the UNTP protocol."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"By the end of this section, you will have a solid foundation for installing, configuring, and using the UNTP Semantic Interoperability Tier 2 Test Suite. You'll be able to validate your UNTP credentials against the core data model and explore extending the test suite for your specific use cases."})]})}function p(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(u,{...t})}):u(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>a});var i=n(6540);const s={},o=i.createContext(s);function r(t){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),i.createElement(o.Provider,{value:e},t.children)}}}]);