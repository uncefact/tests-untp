"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6941],{9340:(e,t,n)=>{n.d(t,{Ay:()=>r,RM:()=>a});var i=n(4848),s=n(8453);const a=[];function o(e){const t={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function r(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},1192:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=n(4848),s=n(8453),a=n(9340);const o={sidebar_position:41,title:"Issuing Credential"},r=void 0,c={id:"mock-apps/common/issuing-credential",title:"Issuing Credential",description:"Description",source:"@site/versioned_docs/version-0.1.0/mock-apps/common/issuing-credential.md",sourceDirName:"mock-apps/common",slug:"/mock-apps/common/issuing-credential",permalink:"/tests-untp/docs/mock-apps/common/issuing-credential",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/next/documentation/versioned_docs/version-0.1.0/mock-apps/common/issuing-credential.md",tags:[],version:"0.1.0",sidebarPosition:41,frontMatter:{sidebar_position:41,title:"Issuing Credential"},sidebar:"tutorialSidebar",previous:{title:"Identify Key Path",permalink:"/tests-untp/docs/mock-apps/common/identifier-key-path"},next:{title:"Verifiable Credentials",permalink:"/tests-untp/docs/mock-apps/common/verifiable-credentials"}},d={},l=[...a.RM,{value:"Description",id:"description",level:2},{value:"Diagram",id:"diagram",level:2},{value:"Managing the status of a Verifiable Credential",id:"managing-the-status-of-a-verifiable-credential",level:2}];function p(e){const t={a:"a",h2:"h2",mermaid:"mermaid",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.Ay,{}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"The Issuing Credential feature in the mock app is responsible for issuing a Verifiable Credential (VC) along with its credential status. The status is added to the VC payload before the VC is issued and is managed by the VC issuer."}),"\n",(0,i.jsx)(t.h2,{id:"diagram",children:"Diagram"}),"\n",(0,i.jsx)(t.p,{children:"The sequence diagram below illustrates the process of issuing a VC along with its status."}),"\n",(0,i.jsx)(t.mermaid,{value:"\nsequenceDiagram\n\nparticipant C as Client\n\nparticipant MA as Mock App\n\nparticipant V as VCKit\n\nC->>MA: Call issue a VC (data, context)\n\nalt Status is not present\n  MA ->> V: Issue new credential status\n  V --\x3e> MA: Return credential status\nend\n\nMA ->> MA: Inject status into VC payload\n\nMA->>V: Issue VC\n\nV--\x3e>MA: Return VC\n\nMA--\x3e>C: Return VC\n"}),"\n",(0,i.jsx)(t.h2,{id:"managing-the-status-of-a-verifiable-credential",children:"Managing the status of a Verifiable Credential"}),"\n",(0,i.jsxs)(t.p,{children:["To manage the status of a Verifiable Credential (",(0,i.jsx)(t.a,{href:"https://uncefact.github.io/project-vckit/docs/get-started/api-server-get-started/basic-operations#activating-a-vc",children:"activate"})," or ",(0,i.jsx)(t.a,{href:"https://uncefact.github.io/project-vckit/docs/get-started/api-server-get-started/basic-operations#revoking-a-vc",children:"revoke"}),"), you can refer to the ",(0,i.jsx)(t.a,{href:"https://uncefact.github.io/project-vckit/docs/",children:"VCkit"})," documentation."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);