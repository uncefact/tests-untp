"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4194],{8096:(e,n,i)=>{i.d(n,{Ay:()=>o,RM:()=>s});var t=i(4848),r=i(8453);const s=[];function a(e){const n={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},948:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var t=i(4848),r=i(8453),s=i(8096);const a={sidebar_position:46,title:"Verifiable Credentials"},o=void 0,c={id:"mock-apps/common/verifiable-credentials",title:"Verifiable Credentials",description:"Description",source:"@site/versioned_docs/version-1.0.0/mock-apps/common/verifiable-credentials.md",sourceDirName:"mock-apps/common",slug:"/mock-apps/common/verifiable-credentials",permalink:"/tests-untp/docs/mock-apps/common/verifiable-credentials",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/next/documentation/versioned_docs/version-1.0.0/mock-apps/common/verifiable-credentials.md",tags:[],version:"1.0.0",sidebarPosition:46,frontMatter:{sidebar_position:46,title:"Verifiable Credentials"},sidebar:"tutorialSidebar",previous:{title:"Issuing Credential",permalink:"/tests-untp/docs/mock-apps/common/issuing-credential"},next:{title:"Construct Application Identifier Data",permalink:"/tests-untp/docs/mock-apps/common/construct-ai-data"}},l={},d=[...s.RM,{value:"Description",id:"description",level:2},{value:"Credential Securing Mechanism",id:"credential-securing-mechanism",level:2},{value:"Credential Payload Structure",id:"credential-payload-structure",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.Ay,{}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Verifiable Credentials follow the flow of the W3C Verifiable Credentials Data Model 2.0. It is a standard for issuing, presenting, and verifying credentials in a secure and privacy-preserving manner. Verifiable Credentials are tamper-proof, cryptographically signed documents containing claims about a subject, such as a person, organization, or device. They are issued by trusted entities known as issuers and can be presented to verifiers to prove the authenticity of the claims."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["Please take a look at the ",(0,t.jsx)(n.a,{href:"https://www.w3.org/TR/vc-data-model-2.0/",children:"Verifiable Credentials Data Model 2.0"})," for more information on the specification"]}),"\n",(0,t.jsx)(n.h2,{id:"credential-securing-mechanism",children:"Credential Securing Mechanism"}),"\n",(0,t.jsx)(n.p,{children:"Verifiable Credentials rely on digital signatures or proofs to ensure the authenticity and integrity of the issued credentials. Two key securing mechanisms are used:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Embedded Proofs"}),": The proof is included directly within the credential object, typically using JSON Web Signatures (JWS) or JSON-LD Signatures."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Enveloping Proofs"}),": The proof wraps the entire credential as a container, using formats like:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JOSE"}),": JSON Object Signing and Encryption, which enables signed credentials using JWS."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"COSE"}),": CBOR Object Signing and Encryption, used for compact and efficient serialization."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Credentials can also be encrypted if sensitive information needs to be protected. Encryption keys are managed through secure Key Management Systems (KMS) to ensure credentials remain confidential and tamper-proof."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["Refer to the ",(0,t.jsx)(n.a,{href:"https://www.w3.org/TR/vc-data-model-2.0/#securing-mechanisms",children:"Verifiable Credentials Data Model 2.0 - Securing Mechanisms"})," for more information on the specification."]}),"\n",(0,t.jsx)(n.h2,{id:"credential-payload-structure",children:"Credential Payload Structure"}),"\n",(0,t.jsxs)(n.p,{children:["When issuing, the credential will follow the ",(0,t.jsx)(n.a,{href:"https://w3c-ccg.github.io/vc-api/#issue-credential",children:"Verifiable Credentials API v0.3 - Issue Credential"})," specification. A typical payload contains the following fields:"]}),"\n",(0,t.jsx)(n.p,{children:"Example: EnvelopedVerifiableCredential"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "@context": ["https://www.w3.org/ns/credentials/v2", "https://www.w3.org/ns/credentials/examples/v2"],\n  "type": "EnvelopedVerifiableCredential",\n  "id": "data:application/vc-ld+jwt,eyJhbGciOiJFZERTQSIsImlzcyI6ImRpZDp3ZWI6ZGRiYy0xMTYtMTA2LTE..."\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example: JSON-LD Verifiable Credential with a Proof"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "@context": ["https://www.w3.org/ns/credentials/v2", "https://www.w3.org/ns/credentials/examples/v2"],\n  "id": "http://example.edu/credentials/1872",\n  "type": ["VerifiableCredential", "AlumniCredential"],\n  "issuer": "https://example.edu/issuers/14",\n  "issuanceDate": "2023-03-21T19:23:24Z",\n  "credentialSubject": {\n    "id": "did:example:abcd1234",\n    "alumniOf": "Example University"\n  },\n  "proof": {\n    "type": "Ed25519Signature2020",\n    "created": "2023-03-21T19:23:24Z",\n    "proofPurpose": "assertionMethod",\n    "verificationMethod": "https://example.edu/issuers/14#key-1",\n    "jws": "eyJhbGciOiJFZERTQSJ9..b9W5k8..."\n  }\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"When verifying a credential, the verifier will call the server to verify the credential. The server will return the verification result as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "verified": true,\n  ...\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["Refer to the ",(0,t.jsx)(n.a,{href:"https://w3c-ccg.github.io/vc-api/#verify-credential",children:"Verifiable Credentials API v0.3 - Verify Credential"})," for more information on the specification."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);