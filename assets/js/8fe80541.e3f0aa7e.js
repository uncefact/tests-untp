"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3706],{8481:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>r});var o=t(4848),s=t(8453);const r=[];function i(e){const n={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},6394:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var o=t(4848),s=t(8453),r=t(8481);const i={sidebar_position:51,title:"QR Code Scanner Dialog Button"},c=void 0,d={id:"mock-apps/components/qr-code-scanner-dialog-button",title:"QR Code Scanner Dialog Button",description:"Description",source:"@site/docs/mock-apps/components/qr-code-scanner-dialog-button.md",sourceDirName:"mock-apps/components",slug:"/mock-apps/components/qr-code-scanner-dialog-button",permalink:"/tests-untp/docs/mock-apps/components/qr-code-scanner-dialog-button",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/mock-apps/components/qr-code-scanner-dialog-button.md",tags:[],version:"current",sidebarPosition:51,frontMatter:{sidebar_position:51,title:"QR Code Scanner Dialog Button"},sidebar:"tutorialSidebar",previous:{title:"Import Button",permalink:"/tests-untp/docs/mock-apps/components/import-button"},next:{title:"Services",permalink:"/tests-untp/docs/mock-apps/services/"}},a={},l=[...r.RM,{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Props",id:"props",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.Ay,{}),"\n",(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"The QRCodeScannerDialogButton component is responsible for rendering a button that allows the user to scan a QR code. The component will return the data that is scanned by the user."}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "name": "QRCodeScannerDialogButton",\n  "type": "EntryData",\n  "props": {\n    "style": { "margin": "40px auto", "paddingTop": "40px", "width": "80%" }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"definitions",children:"Definitions"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Property"}),(0,o.jsx)(n.th,{children:"Required"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Type"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"name"}),(0,o.jsx)(n.td,{children:"Yes"}),(0,o.jsx)(n.td,{children:'The name of the component(should be "QRCodeScannerDialogButton")'}),(0,o.jsx)(n.td,{children:"String"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"type"}),(0,o.jsx)(n.td,{children:"Yes"}),(0,o.jsx)(n.td,{children:'The type of the component (should be "EntryData")'}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/docs/mock-apps/common/component-type",children:"ComponentType"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"props"}),(0,o.jsx)(n.td,{children:"Yes"}),(0,o.jsx)(n.td,{children:"The properties for the QRCodeScannerDialogButton"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/qr-code-scanner-dialog-button#props",children:"Props"})})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Property"}),(0,o.jsx)(n.th,{children:"Required"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Type"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"style"}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:"The style for the component"}),(0,o.jsx)(n.td,{children:"Object"})]})})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);