"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8281],{8481:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>r});var o=n(4848),s=n(8453);const r=[];function i(e){const t={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsx)(t.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},3435:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=n(4848),s=n(8453),r=n(8481);const i={sidebar_position:56,title:"Convert Object To Array 1 Item"},a=void 0,c={id:"mock-apps/services/convert-object-to-array-1-item",title:"Convert Object To Array 1 Item",description:"Description",source:"@site/docs/mock-apps/services/convert-object-to-array-1-item.md",sourceDirName:"mock-apps/services",slug:"/mock-apps/services/convert-object-to-array-1-item",permalink:"/tests-untp/docs/mock-apps/services/convert-object-to-array-1-item",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/mock-apps/services/convert-object-to-array-1-item.md",tags:[],version:"current",sidebarPosition:56,frontMatter:{sidebar_position:56,title:"Convert Object To Array 1 Item"},sidebar:"tutorialSidebar",previous:{title:"Process Traceability Event",permalink:"/tests-untp/docs/mock-apps/services/process-traceability-event"},next:{title:"Common",permalink:"/tests-untp/docs/mock-apps/common/"}},p={},d=[...r.RM,{value:"Description",id:"description",level:2},{value:"Diagram",id:"diagram",level:2},{value:"Example",id:"example",level:2},{value:"Definitions",id:"definitions",level:2}];function m(e){const t={a:"a",code:"code",h2:"h2",mermaid:"mermaid",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.Ay,{}),"\n",(0,o.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"convertObjectToArray1Item"})," service is responsible for converting an object to an array with one item. This service is used to convert an object to an array with one item to be used in the individual event services like ",(0,o.jsx)(t.a,{href:"/docs/mock-apps/services/process-object-event",children:"processObjectEvent"}),", ",(0,o.jsx)(t.a,{href:"/docs/mock-apps/services/process-aggregation-event",children:"processAggregationEvent"}),", ",(0,o.jsx)(t.a,{href:"/docs/mock-apps/services/process-transformation-event-only",children:"processTransformationEventOnly"}),", ",(0,o.jsx)(t.a,{href:"/docs/mock-apps/services/process-association-event",children:"processAssociationEvent"}),", and ",(0,o.jsx)(t.a,{href:"/docs/mock-apps/services/process-transaction-event",children:"processTransactionEvent"}),". The service will convert the data that is from the JSON form of the JSON schema with the root type is an object to an array with one item."]}),"\n",(0,o.jsx)(t.h2,{id:"diagram",children:"Diagram"}),"\n",(0,o.jsx)(t.mermaid,{value:"flowchart TD\n   A[Client] --JSON form radio button select an event--\x3e B[Traceability Event]\n   B --An array data--\x3e C[Object Event]\n   A --JSON form simple Object event--\x3e D[Convert object data to array 1 item data]\n   D --An array of 1 Object event data--\x3e C"}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{ "name": "convertObjectToArray1Item", "parameters": [{ "path": "/data" }] }\n'})}),"\n",(0,o.jsx)(t.h2,{id:"definitions",children:"Definitions"}),"\n",(0,o.jsxs)(t.p,{children:["| Property | Required | Description | Type |\n| ----------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------- | |\n| path | No | The path of the data wants to convert. If the path is undefined, it will convert the whole data. | ",(0,o.jsx)(t.a,{href:"/docs/mock-apps/common/identifier-key-path",children:"IdentifierKeyPath"})," |"]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(6540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);