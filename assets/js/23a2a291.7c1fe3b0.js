"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1612],{69340:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>r});var i=n(74848),s=n(28453);const r=[];function o(e){const t={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},23279:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=n(74848),s=n(28453),r=n(69340);const o={sidebar_position:1,title:"Test Suites"},a=void 0,c={id:"test-suites/index",title:"Test Suites",description:"The UNTP Test Suite comprises three test suites:",source:"@site/versioned_docs/version-0.1.0/test-suites/index.md",sourceDirName:"test-suites",slug:"/test-suites/",permalink:"/tests-untp/docs/0.1.0/test-suites/",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/next/documentation/versioned_docs/version-0.1.0/test-suites/index.md",tags:[],version:"0.1.0",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Test Suites"},sidebar:"tutorialSidebar",previous:{title:"Conformity Credential",permalink:"/tests-untp/docs/0.1.0/mock-apps/conformity-credential"},next:{title:"Semantic Interoperability",permalink:"/tests-untp/docs/0.1.0/test-suites/semantic-interoperability/"}},l={},d=[...r.RM];function p(e){const t={a:"a",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.Ay,{}),"\n",(0,i.jsx)(t.p,{children:"The UNTP Test Suite comprises three test suites:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/docs/test-suites/technical-interoperability",children:(0,i.jsx)(t.strong,{children:"Technical Interoperability"})}),": Validates the technical aspects of implementations against UNTP protocol requirements."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/docs/test-suites/semantic-interoperability",children:(0,i.jsx)(t.strong,{children:"Semantic Interoperability"})}),": Ensures credentials produced by an implementation are semantically consistent with the UNTP protocol, allowing for conformance while permitting extensions."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Graph Validation"}),": Assesses the entire trust graph produced by an implementation, verifying the integrity and validity of relationships."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The Test Suite follows a tiered approach:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/docs/test-suites/technical-interoperability",children:(0,i.jsx)(t.strong,{children:"Tier 1"})}),": Technical interoperability"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/docs/test-suites/semantic-interoperability",children:(0,i.jsx)(t.strong,{children:"Tier 2"})}),": Semantic interoperability"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Tier 3"}),": Graph validation"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This structure enables progressive validation of UNTP implementations. The Semantic Interoperability and Graph Validation components are extensible, allowing customisation for specific industry needs whilst maintaining core UNTP compliance."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);