"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7017],{8481:(e,t,n)=>{n.d(t,{Ay:()=>d,RM:()=>s});var i=n(4848),r=n(8453);const s=[];function o(e){const t={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},199:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var i=n(4848),r=n(8453),s=n(8481);const o={sidebar_position:34,title:"Identify Provider"},d=void 0,c={id:"mock-apps/common/identify-provider",title:"Identify Provider",description:"Description",source:"@site/docs/mock-apps/common/identify-provider.md",sourceDirName:"mock-apps/common",slug:"/mock-apps/common/identify-provider",permalink:"/tests-untp/docs/mock-apps/common/identify-provider",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/mock-apps/common/identify-provider.md",tags:[],version:"current",sidebarPosition:34,frontMatter:{sidebar_position:34,title:"Identify Provider"},sidebar:"tutorialSidebar",previous:{title:"Construct Data",permalink:"/tests-untp/docs/mock-apps/common/construct-data"},next:{title:"Component Type",permalink:"/tests-untp/docs/mock-apps/common/component-type"}},l={},a=[...s.RM,{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Provider Types",id:"provider-types",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.Ay,{}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"Identify Provider"})," object is a key component in the Mock App system that links scanned identifiers to their corresponding ",(0,i.jsx)(t.a,{href:"/docs/mock-apps/dependent-services/identity-resolution-service",children:"Identity Resolver Service"}),", understands how to communicate with such services and encapsulates logic to interpret data retrieved from data carriers."]}),"\n",(0,i.jsx)(t.p,{children:"It serves three main functions:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Interprets data from scanned carriers"}),"\n",(0,i.jsx)(t.li,{children:"Communicates with external identity registrar services"}),"\n",(0,i.jsx)(t.li,{children:"Processes identifiers from identity registrars"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"For instance, when dealing with a Global Trade Item Number (GTIN) from GS1:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"The GS1 Identify Provider recognises the identifier format"}),"\n",(0,i.jsx)(t.li,{children:"It interacts with the Mock Verified By GS1 Service"}),"\n",(0,i.jsx)(t.li,{children:"It formats the request appropriately"}),"\n",(0,i.jsx)(t.li,{children:"It extracts the actor's Identity Resolver (IDR) link from the response"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The Mock App system can use multiple identify providers, each tailored to a specific identity registrar and service. This modular approach allows the system to work with a variety of identification standards and services."}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "identifyProvider": {\n    "type": "gs1",\n    "url": "http://localhost:3333/products"\n  }\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"definitions",children:"Definitions"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Required"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Type"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"type"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,i.jsx)(t.td,{children:'The type of identify provider, e.g., "gs1" for GS1 standards.'}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/docs/mock-apps/common/identify-provider#provider-types",children:"ProviderType"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"url"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,i.jsx)(t.td,{children:"The URL endpoint for the identify provider service."}),(0,i.jsx)(t.td,{children:"String"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"provider-types",children:"Provider Types"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"gs1"}),(0,i.jsx)(t.td,{children:"Used for resolving (using the Mock Verified By GS1 Service)/understanding GS1-based identifiers (e.g., GTINs)."})]})})]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Note"}),": The available types may be extended in the future to support additional identity providers."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);