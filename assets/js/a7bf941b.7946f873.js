"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3169],{8481:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>i});var o=t(4848),r=t(8453);const i=[];function s(e){const n={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},4259:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var o=t(4848),r=t(8453),i=t(8481);const s={sidebar_position:119,title:"Conformity Credential"},a=void 0,c={id:"mock-apps/conformity-credential",title:"Conformity Credential",description:"Description",source:"@site/docs/mock-apps/conformity-credential.md",sourceDirName:"mock-apps",slug:"/mock-apps/conformity-credential",permalink:"/tests-untp/docs/mock-apps/conformity-credential",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/mock-apps/conformity-credential.md",tags:[],version:"current",sidebarPosition:119,frontMatter:{sidebar_position:119,title:"Conformity Credential"},sidebar:"tutorialSidebar",previous:{title:"Verify App",permalink:"/tests-untp/docs/mock-apps/verify-app"},next:{title:"Test Suites",permalink:"/tests-untp/docs/test-suites/"}},l={},p=[...i.RM,{value:"Description",id:"description",level:2},{value:"Manually Import Conformity Credential",id:"manually-import-conformity-credential",level:3},{value:"Example config snippet:",id:"example-config-snippet",level:4},{value:"Create Conformity Credential Within Mock App System",id:"create-conformity-credential-within-mock-app-system",level:3},{value:"Request Conformity Credential from External Service",id:"request-conformity-credential-from-external-service",level:3},{value:"Using the Stored Credential in a DPP",id:"using-the-stored-credential-in-a-dpp",level:4},{value:"Option 1: Using the Conformity Credential Checkbox component",id:"option-1-using-the-conformity-credential-checkbox-component",level:4},{value:"Option 2: Using the Local Storage Loader component",id:"option-2-using-the-local-storage-loader-component",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.Ay,{}),"\n",(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(n.p,{children:["This section outlines three methods for creating and using ",(0,o.jsx)(n.a,{href:"https://uncefact.github.io/spec-untp/docs/specification/ConformityCredential",children:"Conformity Credentials"})," within the Mock App system. Each method offers different levels of automation and integration with external services."]}),"\n",(0,o.jsx)(n.h3,{id:"manually-import-conformity-credential",children:"Manually Import Conformity Credential"}),"\n",(0,o.jsx)(n.p,{children:"This method involves manually creating and importing a Conformity Credential."}),"\n",(0,o.jsx)(n.p,{children:"Steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Craft the Conformity Credential payload based on the ",(0,o.jsx)(n.a,{href:"https://uncefact.github.io/spec-untp/docs/specification/ConformityCredential#versions",children:"desired schema"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Sign the credential using the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/dependent-services/verifiable-credential-service",children:"Verifiable Credential service"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Store the credential in an external or ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/dependent-services/storage-service",children:"Local Storage service"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/docs/mock-apps/common/verify-link",children:"Format the URL"})," for the conformity evidence reference."]}),"\n",(0,o.jsxs)(n.li,{children:["Include the formatted URL in the Conformity Credential within the DPP data props in the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/configuration/",children:"app config"})," (conformityEvidence.reference)."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"example-config-snippet",children:"Example config snippet:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Steel Mill 1",\n  "type": "producer",\n  "assets": {\n    "logo": "https://example.com/Logo.jpg",\n    "brandTitle": "Steel Mill 1"\n  },\n  "features": [\n    {\n      "name": "Issue DPP",\n      "id": "produce_product",\n      "components": [\n        {\n          "name": "JsonForm",\n          "type": "EntryData",\n          "props": {\n            "schema": {\n              "type": "object",\n              "properties": {\n                "conformityClaim": {\n                  "type": "array",\n                  "items": {\n                    "type": "object",\n                    "properties": {\n                      "topic": { "type": "string" },\n                      "standardOrRegulation": { "type": "string" },\n                      "criteriaReference": { "type": "string" },\n                      "claimedValues": {\n                        "type": "array",\n                        "items": {\n                          "type": "object",\n                          "properties": {\n                            "name": { "type": "string" },\n                            "value": {\n                              "type": "object",\n                              "properties": {\n                                "value": { "type": "number" },\n                                "unit": { "type": "string" }\n                              }\n                            },\n                            "accuracy": { "type": "number" }\n                          }\n                        }\n                      },\n                      "benchmarkValue": {\n                        "type": "object",\n                        "properties": {\n                          "name": { "type": "string" },\n                          "value": {\n                            "type": "object",\n                            "properties": {\n                              "value": { "type": "number" },\n                              "unit": { "type": "string" }\n                            }\n                          }\n                        }\n                      },\n                      "benchmarkReference": { "type": "string" },\n                      "conformance": { "type": "boolean" },\n                      "conformityEvidence": {\n                        "type": "object",\n                        "properties": {\n                          "type": { "type": "string" },\n                          "assuranceLevel": { "type": "string" },\n                          "reference": { "type": "string" }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            "data": {\n              "conformityClaim": [\n                {\n                  "topic": "environment.emissions",\n                  "standardOrRegulation": "https://example.org/standards/environment",\n                  "criteriaReference": "https://example.org/standards/environment/criteria",\n                  "claimedValues": [\n                    { "name": "GHG Emissions", "value": { "value": 50, "unit": "KG_CO2E" }, "accuracy": 0.98 }\n                  ],\n                  "benchmarkValue": { "name": "Industry Benchmark", "value": { "value": 60, "unit": "KG_CO2E" } },\n                  "benchmarkReference": "https://example.org/benchmarks/environment",\n                  "conformance": true,\n                  "conformityEvidence": {\n                    "type": "w3c_vc",\n                    "assuranceLevel": "3rdParty",\n                    "reference": "http://localhost:3001/verify?q%3D%7Bpayload%3A%7Buri%3Ahttp%3A%2F%2Flocalhost%3A3001%2Fconformity-credentials%2Fsteel-mill-1-emissions.json%7D%7D"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ],\n      "services": []\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"create-conformity-credential-within-mock-app-system",children:"Create Conformity Credential Within Mock App System"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"To Be Implemented"})}),"\n",(0,o.jsxs)(n.p,{children:["This method involves creating the conformity credential within the Mock App system by using a ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/configuration/feature-config",children:"feature"})," that is composed of the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/json-form",children:"JsonForm component"})," and storing it in local storage or by using the Storage service."]}),"\n",(0,o.jsx)(n.h3,{id:"request-conformity-credential-from-external-service",children:"Request Conformity Credential from External Service"}),"\n",(0,o.jsxs)(n.p,{children:["This method uses the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/conformity-credential",children:"ConformityCredential component"})," to request a conformity credential from an external service, store it, and manage the received credentials."]}),"\n",(0,o.jsx)(n.p,{children:"Steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Configure the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/conformity-credential",children:"ConformityCredential component"})," in the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/configuration/",children:"app config"})," to specify the external service details and ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/common/storage",children:"storage options"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Use the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/conformity-credential",children:"ConformityCredential component"})," to send a request to the external service for a Conformity Credential."]}),"\n",(0,o.jsx)(n.li,{children:"Receive the credential from the external service."}),"\n",(0,o.jsxs)(n.li,{children:["Store the received credential in the specified ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/dependent-services/storage-service",children:"storage service"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"Save a reference to the stored credential in local storage for future use (only accessible by the specified app)."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["All of the steps above are handled inside of the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/conformity-credential",children:"ConformityCredential component"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Example config snippet:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Steel Mill 1",\n  "type": "producer",\n  "features": [\n    {\n      "name": "Request Conformity Credential",\n      "id": "request_conformity_credential",\n      "components": [\n        {\n          "name": "ConformityCredential",\n          "type": "Void",\n          "props": {\n            "credentialRequestConfigs": [\n              {\n                "url": "https://example.com/emissions-assessment",\n                "params": {},\n                "options": {\n                  "headers": [],\n                  "method": "POST"\n                },\n                "credentialName": "Emissions Assessment",\n                "credentialPath": "/body/credential",\n                "appOnly": "Steel Mill 1"\n              }\n            ],\n            "storedCredentialsConfig": {\n              "url": "http://localhost:3001/upload",\n              "params": {\n                "resultPath": "/url"\n              },\n              "options": {\n                "method": "POST",\n                "headers": {\n                  "Content-Type": "application/json"\n                }\n              }\n            }\n          }\n        }\n      ],\n      "services": []\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"using-the-stored-credential-in-a-dpp",children:"Using the Stored Credential in a DPP"}),"\n",(0,o.jsx)(n.p,{children:"To use the stored Conformity Credentials in the DPP issuance process, you have two options:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Using the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/conformity-credential-checkbox",children:"Conformity Credential Checkbox component"})]}),"\n",(0,o.jsxs)(n.li,{children:["Using the ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/local-storage-loader",children:"Local Storage Loader component"})]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"option-1-using-the-conformity-credential-checkbox-component",children:"Option 1: Using the Conformity Credential Checkbox component"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/conformity-credential-checkbox",children:"Conformity Credential Checkbox component"})," allows users to select one or more Conformity Credentials from a list of checkboxes. The component is added to the issue DPP ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/configuration/feature-config",children:"feature"}),". Here's how you can incorporate it into your DPP issuance process:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Steel Mill 1",\n  "type": "producer",\n  "features": [\n    {\n      "name": "Issue DPP",\n      "id": "produce_product",\n      "components": [\n        {\n          "name": "ConformityCredentialCheckbox",\n          "type": "EntryData"\n        },\n        {\n          "name": "JsonForm",\n          "type": "EntryData",\n          "props": {\n            "schema": {\n              /* Your DPP JSON schema */\n            },\n            "constructData": {\n              "mappingFields": [\n                {\n                  "sourcePath": "/{app_name}/0/url",\n                  "destinationPath": "/credentialSubject/conformityClaim/0/conformityEvidence/reference"\n                }\n              ]\n            }\n          }\n        },\n        {\n          "name": "CustomButton",\n          "type": "Submit",\n          "props": {\n            "label": "Submit",\n            "description": "Click to submit the form"\n          }\n        }\n      ],\n      "services": [\n        {\n          /* Services to issue DPP */\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"option-2-using-the-local-storage-loader-component",children:"Option 2: Using the Local Storage Loader component"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"/docs/mock-apps/components/local-storage-loader",children:"Local Storage Loader component"})," loads data from local storage and provides it to nested components. Here's how you can use it to load and incorporate Conformity Credentials:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Steel Mill 1",\n  "type": "producer",\n  "features": [\n    {\n      "name": "Issue DPP",\n      "id": "produce_product",\n      "components": [\n        {\n          "name": "LocalStorageLoader",\n          "type": "EntryData",\n          "props": {\n            "storageKey": "Farm_conformity_credentials",\n            "nestedComponents": [\n              {\n                "name": "JsonForm",\n                "type": "EntryData",\n                "props": {\n                  "schema": {\n                    /* Your DPP JSON schema */\n                  },\n                  "constructData": {\n                    "mappingFields": [\n                      {\n                        "sourcePath": "/{app_name}/0/url",\n                        "destinationPath": "/credentialSubject/conformityClaim/0/conformityEvidence/reference"\n                      }\n                    ]\n                  }\n                }\n              },\n              {\n                "name": "CustomButton",\n                "type": "Submit",\n                "props": {\n                  "label": "Submit",\n                  "description": "Click to submit the form"\n                }\n              }\n            ]\n          }\n        }\n      ],\n      "services": [\n        {\n          /* Services to issue DPP */\n        }\n      ]\n    }\n  ]\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);