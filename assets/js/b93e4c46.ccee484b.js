"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8757],{9340:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>i});var s=t(4848),r=t(8453);const i=[];function a(e){const n={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},4705:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var s=t(4848),r=t(8453),i=t(9340);const a={sidebar_position:10,title:"General Feature"},o=void 0,c={id:"mock-apps/configuration/general-feature-config",title:"General Feature",description:"General Features define a shared set of functionalities accessible by all Mock Apps within the Mock App system.",source:"@site/versioned_docs/version-0.1.0/mock-apps/configuration/general-feature-config.md",sourceDirName:"mock-apps/configuration",slug:"/mock-apps/configuration/general-feature-config",permalink:"/tests-untp/docs/mock-apps/configuration/general-feature-config",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/next/documentation/versioned_docs/version-0.1.0/mock-apps/configuration/general-feature-config.md",tags:[],version:"0.1.0",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"General Feature"},sidebar:"tutorialSidebar",previous:{title:"System",permalink:"/tests-untp/docs/mock-apps/configuration/system-config"},next:{title:"App",permalink:"/tests-untp/docs/mock-apps/configuration/app-config"}},l={},d=[...i.RM,{value:"Diagram",id:"diagram",level:2},{value:"Config",id:"config",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",mermaid:"mermaid",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.Ay,{}),"\n",(0,s.jsx)(n.p,{children:"General Features define a shared set of functionalities accessible by all Mock Apps within the Mock App system."}),"\n",(0,s.jsx)(n.p,{children:"The Mock App system can include multiple General Features, each containing various features that perform distinct functions. Each General Feature is housed on a single page within the Mock App system, accessible via the sidebar menu."}),"\n",(0,s.jsx)(n.p,{children:"Implementers can customise each General Feature page with branding elements, such as logos, colours and a title."}),"\n",(0,s.jsx)(n.p,{children:"Each General Feature comprises a collection of features that encapsulate specific functionality or business logic. These features are made up of configurable components and services."}),"\n",(0,s.jsxs)(n.p,{children:["For instance, a General Feature might involve ",(0,s.jsx)(n.a,{href:"/docs/mock-apps/conformity-credential#request-conformity-credential-from-external-service",children:"requesting a Conformity Credential from an external conformity assessment body (CAB)"}),". This is a common process that each app associated with an actor in the value chain would most likely need to perform."]}),"\n",(0,s.jsx)(n.h2,{id:"diagram",children:"Diagram"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\n    A[General Feature]\n    A --\x3e B[Name]\n    A --\x3e C[Type]\n    A --\x3e D[Styles]\n    A --\x3e E[Features]\n    \n    E --\x3e E1[Feature 1]\n    E --\x3e E2[Feature 2]\n\n    E1 --\x3e F[Components]\n    E1 --\x3e G[Services]\n\n    F --\x3e F1[Component 1] \n    F --\x3e F2[Component 2]\n\n    G --\x3e G1[Service 1]\n    G --\x3e G2[Service 2] "}),"\n",(0,s.jsx)(n.h2,{id:"config",children:"Config"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The name of the general feature (displayed in the sidebar)"}),(0,s.jsx)(n.td,{children:"String"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"type"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"The type of the general feature"}),(0,s.jsx)(n.td,{children:"String"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"style"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Custom styling options for the general feature (Used to determine the colour of the header and buttons on the general feature page)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/mock-apps/common/style",children:"Style"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"features"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"A collection of features that make up this general feature"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/docs/mock-apps/configuration/feature-config",children:"Feature"}),"[]"]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "name": "CAB 1",\n    "type": "",\n    "styles": {\n        "primaryColor": "rgb(255, 207, 7)",\n        "secondaryColor": "black",\n        "tertiaryColor": "black"\n    },\n    "features": []\n}\n\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);