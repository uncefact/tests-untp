"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2616],{8481:(e,t,n)=>{n.d(t,{Ay:()=>o,RM:()=>i});var r=n(4848),s=n(8453);const i=[];function a(e){const t={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function o(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8455:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(4848),s=n(8453),i=n(8481);const a={sidebar_position:28,title:"Get Value From Local Storage"},o=void 0,c={id:"mock-apps/services/get-value-from-local-storage",title:"Get Value From Local Storage",description:"Description",source:"@site/docs/mock-apps/services/get-value-from-local-storage.md",sourceDirName:"mock-apps/services",slug:"/mock-apps/services/get-value-from-local-storage",permalink:"/tests-untp/docs/next/mock-apps/services/get-value-from-local-storage",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/next/documentation/docs/mock-apps/services/get-value-from-local-storage.md",tags:[],version:"current",sidebarPosition:28,frontMatter:{sidebar_position:28,title:"Get Value From Local Storage"},sidebar:"tutorialSidebar",previous:{title:"Merge To Local Storage",permalink:"/tests-untp/docs/next/mock-apps/services/merge-to-local-storage"},next:{title:"Process Digital Facility Record",permalink:"/tests-untp/docs/next/mock-apps/services/process-digital-facility-record"}},d={},l=[...i.RM,{value:"Description",id:"description",level:2},{value:"Diagram",id:"diagram",level:2},{value:"Example",id:"example",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Function type",id:"function-type",level:2}];function p(e){const t={code:"code",h2:"h2",mermaid:"mermaid",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.Ay,{}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"getValueFromLocalStorage"})," service retrieves data from the browser's local storage. It takes a specific storage key to locate the data and an optional key to extract a particular value from the stored object. If no key is provided, the entire item is returned. Additionally, the function can update a provided state object with the retrieved data if a ",(0,r.jsx)(t.code,{children:"stateKey"})," is specified."]}),"\n",(0,r.jsx)(t.h2,{id:"diagram",children:"Diagram"}),"\n",(0,r.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant C as Client\n    participant G as getValueFromLocalStorage\n    participant L as LocalStorage\n\n    C->>G: Call getValueFromLocalStorage(data, params)\n    G->>L: Get data from LocalStorage (storageKey)\n    L--\x3e>G: Return stored data\n    G->>G: Parse data and extract key (if specified)\n    G->>G: Update state object (if stateKey is specified)\n    G--\x3e>C: Return retrieved data or updated state"}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "name": "getValueFromLocalStorage",\n  "parameters": [\n    {\n      "storageKey": "topLineSteel_dpps",\n      "key": "/vc"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"definitions",children:"Definitions"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Type"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"storageKey"}),(0,r.jsx)(t.td,{children:"Yes"}),(0,r.jsx)(t.td,{children:"The key used to locate the specific data in local storage"}),(0,r.jsx)(t.td,{children:"String"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"key"}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"The key to retrieve a specific value within the stored object. If not provided, returns all data"}),(0,r.jsx)(t.td,{children:"String"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"stateKey"}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"The key used to update the provided state object with the retrieved data"}),(0,r.jsx)(t.td,{children:"String"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"function-type",children:"Function type"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ReturnData"}),(0,r.jsx)(t.td,{children:"It processes the input data or generates data independently and returns the processed result after successful execution."})]})})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(6540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);