"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5882],{8481:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>i});var s=n(4848),r=n(8453);const i=[];function o(e){const t={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8042:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=n(4848),r=n(8453),i=n(8481);const o={sidebar_position:27,title:"Merge To Local Storage"},a=void 0,c={id:"mock-apps/services/merge-to-local-storage",title:"Merge To Local Storage",description:"Description",source:"@site/docs/mock-apps/services/merge-to-local-storage.md",sourceDirName:"mock-apps/services",slug:"/mock-apps/services/merge-to-local-storage",permalink:"/tests-untp/docs/mock-apps/services/merge-to-local-storage",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/mock-apps/services/merge-to-local-storage.md",tags:[],version:"current",sidebarPosition:27,frontMatter:{sidebar_position:27,title:"Merge To Local Storage"},sidebar:"tutorialSidebar",previous:{title:"Process Object Event",permalink:"/tests-untp/docs/mock-apps/services/process-object-event"},next:{title:"Get Value From Local Storage",permalink:"/tests-untp/docs/mock-apps/services/get-value-from-local-storage"}},d={},l=[...i.RM,{value:"Description",id:"description",level:2},{value:"Diagram",id:"diagram",level:2},{value:"Example",id:"example",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Function type",id:"function-type",level:2}];function p(e){const t={code:"code",h2:"h2",mermaid:"mermaid",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.Ay,{}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"mergeToLocalStorage"})," service is responsible for merging data into the browser's local storage. It takes a specific storage key and an object key path to identify where and how the data should be stored or updated in the local storage."]}),"\n",(0,s.jsx)(t.h2,{id:"diagram",children:"Diagram"}),"\n",(0,s.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant C as Client\n    participant M as mergeToLocalStorage\n    participant L as LocalStorage\n\n    C->>M: Call mergeToLocalStorage(data, params)\n    M->>M: Extract key using objectKeyPath\n    M->>L: Get existing data (storageKey)\n    L--\x3e>M: Return existing data\n    M->>M: Merge new data with existing data\n    M->>L: Set merged data (storageKey)\n    L--\x3e>M: Confirm storage\n    M--\x3e>C: Return success"}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "name": "mergeToLocalStorage",\n  "parameters": [\n    {\n      "storageKey": "topLineSteel_dpps",\n      "objectKeyPath": "/vc/credentialSubject/productIdentifier/0/identifierValue"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"definitions",children:"Definitions"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Type"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"storageKey"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{children:"The key used to access the specific data in local storage"}),(0,s.jsx)(t.td,{children:"String"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"objectKeyPath"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{children:"JSON path to the unique identifier within the object to be stored"}),(0,s.jsx)(t.td,{children:"String"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"function-type",children:"Function type"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Void"}),(0,s.jsx)(t.td,{children:"Performs an operation without returning any data after execution."})]})})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);