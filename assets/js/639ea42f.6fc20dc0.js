"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1579],{8481:(e,i,t)=>{t.d(i,{Ay:()=>o,RM:()=>s});var n=t(4848),r=t(8453);const s=[];function c(e){const i={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsx)(i.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function o(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},7292:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var n=t(4848),r=t(8453),s=t(8481);const c={sidebar_position:42,title:"Process Digital Facility Record"},o=void 0,a={id:"mock-apps/services/process-digital-facility-record",title:"Process Digital Facility Record",description:"Description",source:"@site/docs/mock-apps/services/process-digital-facility-record.md",sourceDirName:"mock-apps/services",slug:"/mock-apps/services/process-digital-facility-record",permalink:"/tests-untp/docs/mock-apps/services/process-digital-facility-record",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/mock-apps/services/process-digital-facility-record.md",tags:[],version:"current",sidebarPosition:42,frontMatter:{sidebar_position:42,title:"Process Digital Facility Record"},sidebar:"tutorialSidebar",previous:{title:"Merge To Local Storage",permalink:"/tests-untp/docs/mock-apps/services/merge-to-local-storage"},next:{title:"Process Digital Identity Anchor",permalink:"/tests-untp/docs/mock-apps/services/process-digital-identity-anchor"}},d={},l=[...s.RM,{value:"Description",id:"description",level:2},{value:"Diagram",id:"diagram",level:2},{value:"Example",id:"example",level:2},{value:"Definitions",id:"definitions",level:2}];function p(e){const i={a:"a",code:"code",h2:"h2",mermaid:"mermaid",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.Ay,{}),"\n",(0,n.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"processDigitalFacilityRecord"})," service is responsible for processing a digital facility record, issuing a ",(0,n.jsx)(i.a,{href:"https://uncefact.github.io/spec-untp/docs/specification/VerifiableCredentials",children:"Verifiable Credential (VC)"}),", uploading it to the ",(0,n.jsx)(i.a,{href:"/docs/mock-apps/dependent-services/storage-service",children:"Storage service"}),", registering the link to the stored digital identity anchor with the ",(0,n.jsx)(i.a,{href:"/docs/mock-apps/dependent-services/identity-resolution-service",children:"Identity Resolver service"}),". It handles the entire lifecycle of creating and managing a digital facility record, from data input to storage and resolution."]}),"\n",(0,n.jsx)(i.h2,{id:"diagram",children:"Diagram"}),"\n",(0,n.jsx)(i.mermaid,{value:"sequenceDiagram\nparticipant C as Client\nparticipant P as processDigitalFacilityRecord\nparticipant V as VCKit\nparticipant S as Storage\nparticipant D as DLR\nC->>P: Call processDigitalFacilityRecord(digitalFacilityRecord, context)\nP->>P: Validate context\nP->>P: Extract identifier\nP->>V: Issue VC\nV--\x3e>P: Return VC\nP->>S: Upload VC\nS--\x3e>P: Return VC URL\nP->>D: Register link resolver\nD--\x3e>P: Return resolver URL\nP--\x3e>C: Return digital facility record VC and resolver URL"}),"\n",(0,n.jsx)(i.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'{\n  "name": "processDigitalFacilityRecord",\n  "parameters": [\n    {\n      "vckit": {\n        "vckitAPIUrl": "http://localhost:3332/v2",\n        "issuer": "did:web:uncefact.github.io:project-vckit:test-and-development",\n        "headers": {\n          "Authorization": "Bearer test123"\n        }\n      },\n      "digitalFacilityRecord": {\n        "context": ["https://www.w3.org/2018/credentials/v1", "https://gs1.org/voc/"],\n        "type": ["DigitalFacilityRecord"],\n        "renderTemplate": [\n          {\n            "template": "<div><h2>DigitalFacilityRecord</h2></div>",\n            "@type": "WebRenderingTemplate2022"\n          }\n        ],\n        "dlrIdentificationKeyType": "gln",\n        "dlrLinkTitle": "DigitalFacilityRecord",\n        "dlrVerificationPage": "https://verify.example.com"\n      },\n      "storage": {\n        "url": "http://localhost:3334/v1/documents",\n        "params": {\n          "resultPath": "/uri",\n          "bucket": "verifiable-credentials"\n        },\n        "options": {\n          "method": "POST",\n          "headers": {\n            "Content-Type": "application/json"\n          }\n        }\n      },\n      "dlr": {\n        "dlrAPIUrl": "https://dlr.example.com/api",\n        "dlrAPIKey": "dlr-api-key-12345",\n        "namespace": "gs1",\n        "linkRegisterPath": "/api/resolver"\n      },\n      "identifierKeyPath": "/id"\n    }\n  ]\n}\n'})}),"\n",(0,n.jsx)(i.h2,{id:"definitions",children:"Definitions"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Property"}),(0,n.jsx)(i.th,{children:"Required"}),(0,n.jsx)(i.th,{children:"Description"}),(0,n.jsx)(i.th,{children:"Type"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"vckit"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsx)(i.td,{children:"Configuration for the VCKit service"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/docs/mock-apps/common/vckit",children:"VCKit"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"digitalFacilityRecord"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsx)(i.td,{children:"Configuration for the Digital Facility Record"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/docs/mock-apps/common/credential",children:"Credential"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"storage"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsx)(i.td,{children:"Configuration for storage service"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/docs/mock-apps/common/storage",children:"Storage"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"dlr"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsx)(i.td,{children:"Configuration for the Digital Link Resolver"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/docs/mock-apps/common/idr",children:"IDR"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"identifierKeyPath"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsx)(i.td,{children:"JSON path to the identifier in the credential subject or the object for function and arguments of JSON path to construct identifier"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/docs/mock-apps/common/identifier-key-path",children:"IdentifierKeyPath"})})]})]})]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>c,x:()=>o});var n=t(6540);const r={},s=n.createContext(r);function c(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);